{"version":3,"sources":["../../app-src/util/HttpService.js"],"names":["HttpService","get","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","console","log","send"],"mappings":";;;;;;AAAO,0CAAMA,WAAN,CAAkB;;AAErBC,oDAAIC,GAAJ,EAAS;;AAEL,mEAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;;AAEpC,8EAAMC,MAAM,IAAIC,cAAJ,EAAZ;;AAEAD,4EAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;;AAEAI,4EAAIG,kBAAJ,GAAyB,MAAM;;AAE3B,wFAAIH,IAAII,UAAJ,IAAkB,CAAtB,EAAyB;;AAErB,oGAAIJ,IAAIK,MAAJ,IAAc,GAAlB,EAAuB;;AAEnBP,oHAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AACH,iGAHD,MAGO;;AAEHC,oHAAQC,GAAR,CAAYV,IAAIQ,YAAhB;AACAT,mHAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,yEAbD;;AAeAR,4EAAIW,IAAJ;AAEH,6DAvBM,CAAP;AAwBH;AA5BoB","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n\r\n    get(url) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const xhr = new XMLHttpRequest();\r\n\r\n            xhr.open('GET', url);\r\n\r\n            xhr.onreadystatechange = () => {\r\n\r\n                if (xhr.readyState == 4) {\r\n\r\n                    if (xhr.status == 200) {\r\n\r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    } else {\r\n\r\n                        console.log(xhr.responseText);\r\n                        reject(xhr.responseText);\r\n                    }\r\n                }\r\n            };\r\n\r\n            xhr.send();\r\n\r\n        });\r\n    }\r\n}"]}